时间复杂度：O(N)
S[]="abbaabba"
s[]="$#a#b#b#a#a#b#b#a#"

p[]="X12125212921252121"（展出便于理解，实际上未知）
p[]：辅助数组，表示以第i个字符为中心的最长回文半径

p[i]-1为原字符串S[]中的以该位置为中心的最长回文串长度

id：当前最长回文子串的中心
mx：以id为中心的最长回文的右边界，即mx=id+p[id]

求p[]数组：
首先初始化mx=0，for i [1,strlen(s)]
1.初步求p[i]
如果i>=mx：越界了，p[i]=1
如果i<mx：p[i]=min(p[j],mx-i)，j为i以id为中心的对称点，id-j=i-id -> j=2*id-i
2.在p[i]初步被求出的基础上，以该i为中心继续扫。不怕越界，因为有'$'和'\0'
while(s[i-p[i]]==s[i+p[i]])p[i]++
3.更新id,mx和maxlen
如果i+p[i]大于mx，说明显然有更大的字符串半径，id=i，mx=i+p[i]
maxlen=max(maxlen,p[i]-1)

结束了。
